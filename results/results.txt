
*********************************************************************************

OUTPUT FOR 01_nested_radical_search.py

Numba JIT compiler available - maximum speed mode!
 mpmath available - high-precision verification enabled
================================================================================
ENHANCED TURBO-OPTIMIZED NESTED RADICAL SEARCH
With Description Length metric and high-precision verification
================================================================================

Warming up JIT compiler (first run)...
JIT compilation complete - subsequent searches will be fast!


================================================================================
TARGET: π = 3.1415926535897932385
================================================================================

  Depth 3:
    [1/10] DFS-60             ... [1, 44, 1202] (0.00s, err=9.50e-08)
    [2/10] DFS-60-min1        ... [1, 44, 1202] (0.00s, err=9.50e-08)
    [3/10] DFS-80             ... [1, 44, 1202] (0.00s, err=9.50e-08)
    [4/10] DFS-80-min1        ... [1, 44, 1202] (0.00s, err=9.50e-08)
    [5/10] DFS-80-min2        ... [3, 21, 686] (0.00s, err=1.59e-06)
    [6/10] DFS-100            ... [1, 44, 1202] (0.00s, err=9.50e-08)
    [7/10] DFS-100-min1       ... [1, 44, 1202] (0.00s, err=9.50e-08)
    [8/10] DFS-100-min2       ... [3, 21, 686] (0.00s, err=1.59e-06)
    [9/10] DFS-150            ... [1, 44, 1202] (0.00s, err=9.50e-08)
    [10/10] DFS-200            ... [1, 44, 1202] (0.00s, err=9.50e-08)
    → Best by accuracy: [1, 44, 1202]
       D=7.0 digits, L=16.7 bits, E=0.420

  Depth 4:
    [1/10] DFS-60             ... [0, 46, 2586, 3237] (0.00s, err=1.16e-10)
    [2/10] DFS-60-min1        ... [2, 33, 806, 960] (0.00s, err=2.93e-10)
    [3/10] DFS-80             ... [3, 7, 1553, 3888] (0.00s, err=2.47e-11)
    [4/10] DFS-80-min1        ... [3, 7, 1553, 3888] (0.00s, err=2.47e-11)
    [5/10] DFS-80-min2        ... [3, 7, 1553, 3888] (0.00s, err=2.47e-11)
    [6/10] DFS-100            ... [3, 7, 1553, 3888] (0.00s, err=2.47e-11)
    [7/10] DFS-100-min1       ... [3, 7, 1553, 3888] (0.00s, err=2.47e-11)
    [8/10] DFS-100-min2       ... [3, 7, 1553, 3888] (0.00s, err=2.47e-11)
    [9/10] DFS-150            ... [0, 48, 2294, 21685] (0.00s, err=2.44e-11)
    [10/10] DFS-200            ... [0, 52, 1889, 29924] (0.00s, err=4.41e-13)
    → Best by accuracy: [0, 52, 1889, 29924]
       D=12.4 digits, L=31.5 bits, E=0.392

  Depth 5:
    [1/10] DFS-60             ... [2, 6, 3081, 2193, 1493] (0.04s, err=1.86e-14)
    [2/10] DFS-60-min1        ... [2, 6, 3081, 2193, 1493] (0.03s, err=1.86e-14)
    [3/10] DFS-80             ... [0, 49, 2276, 4500, 2320] (0.07s, err=2.79e-16)
    [4/10] DFS-80-min1        ... [1, 40, 1416, 6234, 4093] (0.05s, err=1.02e-15)
    [5/10] DFS-80-min2        ... [2, 6, 3081, 2193, 1493] (0.03s, err=1.86e-14)
    [6/10] DFS-100            ... [0, 49, 2276, 4500, 2320] (0.11s, err=2.79e-16)
    [7/10] DFS-100-min1       ... [1, 40, 1416, 6234, 4093] (0.08s, err=1.02e-15)
    [8/10] DFS-100-min2       ... [3, 8, 1448, 7681, 3350] (0.06s, err=1.92e-15)
    [9/10] DFS-150            ... [0, 49, 2276, 4500, 2320] (0.24s, err=2.79e-16)
    [10/10] DFS-200            ... [0, 1, 9118, 31071, 24469] (0.41s, err=7.67e-16)
    → Best by accuracy: [0, 49, 2276, 4500, 2320]
       D=15.6 digits, L=40.1 bits, E=0.388

  Depth 6:
    [1/10] DFS-60             ... [0, 41, 3127, 2990, 1067, 2429] (2.14s, err=1.37e-16)
    [2/10] DFS-60-min1        ... [1, 20, 3395, 2189, 1150, 2235] (1.64s, err=6.53e-17)
    [3/10] DFS-80             ... [0, 19, 6104, 1891, 1832, 6439] (6.71s, err=1.77e-16)
    [4/10] DFS-80-min1        ... [1, 2, 5862, 239, 584, 6172] (4.16s, err=4.60e-17)
    [5/10] DFS-80-min2        ... [2, 2, 3521, 4949, 2236, 260] (2.70s, err=2.79e-16)
    [6/10] DFS-100            ... [0, 0, 9392, 9224, 8797, 6993] (13.06s, err=5.07e-17)
    [7/10] DFS-100-min1       ... [1, 1, 5945, 7635, 1554, 9186] (8.80s, err=2.34e-17)
    [8/10] DFS-100-min2       ... [2, 2, 3504, 7598, 8189, 2475] (6.14s, err=1.07e-16)
    [9/10] DFS-150            ... [0, 0, 9338, 22576, 6914, 5293] (42.16s, err=2.29e-16)
    [10/10] DFS-200            ... [0, 0, 9288, 40077, 18222, 35851] (96.84s, err=1.37e-16)
    → Best by accuracy: [1, 1, 5945, 7635, 1554, 9186]
       D=16.6 digits, L=51.2 bits, E=0.325
    → Best by efficiency: [1, 2, 5862, 239, 584, 6172]
       E=0.365 digits/bit, D=16.3, L=44.8

================================================================================
TARGET: e = 2.7182818284590452354
================================================================================

  Depth 3:
    [1/10] DFS-60             ... [0, 10, 1989] (0.00s, err=7.00e-07)
    [2/10] DFS-60-min1        ... [1, 2, 1507] (0.00s, err=8.64e-07)
    [3/10] DFS-80             ... [0, 10, 1989] (0.00s, err=7.00e-07)
    [4/10] DFS-80-min1        ... [1, 2, 1507] (0.00s, err=8.64e-07)
    [5/10] DFS-80-min2        ... [2, 5, 578] (0.00s, err=5.04e-06)
    [6/10] DFS-100            ... [0, 10, 1989] (0.00s, err=7.00e-07)
    [7/10] DFS-100-min1       ... [1, 2, 1507] (0.00s, err=8.64e-07)
    [8/10] DFS-100-min2       ... [2, 5, 578] (0.00s, err=5.04e-06)
    [9/10] DFS-150            ... [0, 10, 1989] (0.00s, err=7.00e-07)
    [10/10] DFS-200            ... [0, 10, 1989] (0.00s, err=7.00e-07)
    → Best by accuracy: [0, 10, 1989]
       D=6.2 digits, L=14.4 bits, E=0.427
    → Best by efficiency: [1, 2, 1507]
       E=0.461 digits/bit, D=6.1, L=13.1

  Depth 4:
    [1/10] DFS-60             ... [0, 33, 410, 3190] (0.00s, err=3.79e-11)
    [2/10] DFS-60-min1        ... [2, 1, 759, 748] (0.00s, err=1.46e-09)
    [3/10] DFS-80             ... [0, 33, 410, 3190] (0.00s, err=3.79e-11)
    [4/10] DFS-80-min1        ... [2, 1, 759, 748] (0.00s, err=1.46e-09)
    [5/10] DFS-80-min2        ... [3, 9, 30, 5677] (0.00s, err=2.90e-09)
    [6/10] DFS-100            ... [0, 33, 410, 3190] (0.00s, err=3.79e-11)
    [7/10] DFS-100-min1       ... [1, 12, 742, 7849] (0.00s, err=3.50e-10)
    [8/10] DFS-100-min2       ... [2, 9, 310, 8405] (0.00s, err=1.63e-09)
    [9/10] DFS-150            ... [0, 8, 2028, 20560] (0.00s, err=1.60e-11)
    [10/10] DFS-200            ... [0, 8, 2028, 20560] (0.00s, err=1.60e-11)
    → Best by accuracy: [0, 8, 2028, 20560]
       D=10.8 digits, L=28.5 bits, E=0.379
    → Best by efficiency: [0, 33, 410, 3190]
       E=0.410 digits/bit, D=10.4, L=25.4

  Depth 5:
    [1/10] DFS-60             ... [2, 11, 304, 408, 2995] (0.02s, err=2.11e-13)
    [2/10] DFS-60-min1        ... [2, 11, 304, 408, 2995] (0.01s, err=2.11e-13)
    [3/10] DFS-80             ... [0, 17, 1337, 5800, 5007] (0.03s, err=9.85e-14)
    [4/10] DFS-80-min1        ... [1, 9, 947, 4250, 1780] (0.02s, err=1.03e-13)
    [5/10] DFS-80-min2        ... [2, 11, 304, 408, 2995] (0.01s, err=2.11e-13)
    [6/10] DFS-100            ... [1, 0, 1597, 4708, 8298] (0.04s, err=2.28e-14)
    [7/10] DFS-100-min1       ... [1, 9, 947, 4250, 1780] (0.03s, err=1.03e-13)
    [8/10] DFS-100-min2       ... [2, 18, 45, 5822, 9086] (0.02s, err=1.37e-13)
    [9/10] DFS-150            ... [1, 23, 216, 10191, 14924] (0.09s, err=1.58e-15)
    [10/10] DFS-200            ... [1, 30, 36, 6389, 33807] (0.15s, err=9.50e-16)
    → Best by accuracy: [1, 30, 36, 6389, 33807]
       D=15.0 digits, L=38.9 bits, E=0.387

  Depth 6:
    [1/10] DFS-60             ... [0, 6, 2317, 1961, 1918, 1714] (1.03s, err=9.14e-17)
    [2/10] DFS-60-min1        ... [1, 22, 322, 977, 3492, 1713] (0.59s, err=1.10e-16)
    [3/10] DFS-80             ... [0, 0, 2906, 5556, 3862, 4798] (3.38s, err=1.02e-16)
    [4/10] DFS-80-min1        ... [1, 1, 1537, 2298, 4491, 2727] (1.37s, err=4.79e-17)
    [5/10] DFS-80-min2        ... [2, 2, 686, 2024, 546, 6142] (0.67s, err=2.23e-16)
    [6/10] DFS-100            ... [0, 0, 2888, 8579, 3796, 5079] (4.54s, err=2.20e-16)
    [7/10] DFS-100-min1       ... [1, 1, 1491, 8864, 8400, 1484] (2.59s, err=2.37e-16)
    [8/10] DFS-100-min2       ... [2, 2, 686, 2024, 546, 6142] (2.20s, err=2.23e-16)
    [9/10] DFS-150            ... [0, 0, 2831, 22395, 8389, 22013] (15.55s, err=9.04e-17)
    [10/10] DFS-200            ... [0, 0, 2780, 40193, 36413, 12323] (35.89s, err=6.60e-18)
    → Best by accuracy: [0, 0, 2780, 40193, 36413, 12323]
       D=17.2 digits, L=55.5 bits, E=0.310
    → Best by efficiency: [2, 2, 686, 2024, 546, 6142]
       E=0.346 digits/bit, D=15.7, L=45.3

================================================================================
TARGET: φ = 1.6180339887498948482
================================================================================

  Depth 3:
    [1/10] DFS-60             ... [0, 0, 47] (0.00s, err=9.16e-05)
    [2/10] DFS-60-min1        ... [1, 1, 3] (0.00s, err=1.07e-02)
    [3/10] DFS-80             ... [0, 0, 47] (0.00s, err=9.16e-05)
    [4/10] DFS-80-min1        ... [1, 1, 3] (0.00s, err=1.07e-02)
    [5/10] DFS-80-min2        ... [0, 0, 0] (0.00s, err=1.62e+00)
    [6/10] DFS-100            ... [0, 0, 47] (0.00s, err=9.16e-05)
    [7/10] DFS-100-min1       ... [1, 1, 3] (0.00s, err=1.07e-02)
    [8/10] DFS-100-min2       ... [0, 0, 0] (0.00s, err=1.62e+00)
    [9/10] DFS-150            ... [0, 0, 47] (0.00s, err=9.16e-05)
    [10/10] DFS-200            ... [0, 0, 47] (0.00s, err=9.16e-05)
    → Best by accuracy: [0, 0, 47]
       D=4.0 digits, L=5.6 bits, E=0.723

  Depth 4:
    [1/10] DFS-60             ... [0, 0, 0, 2207] (0.00s, err=2.08e-08)
    [2/10] DFS-60-min1        ... [1, 1, 1, 3] (0.00s, err=3.31e-03)
    [3/10] DFS-80             ... [0, 0, 0, 2207] (0.00s, err=2.08e-08)
    [4/10] DFS-80-min1        ... [1, 1, 1, 3] (0.00s, err=3.31e-03)
    [5/10] DFS-80-min2        ... [0, 0, 0, 0] (0.00s, err=1.62e+00)
    [6/10] DFS-100            ... [0, 0, 0, 2207] (0.00s, err=2.08e-08)
    [7/10] DFS-100-min1       ... [1, 1, 1, 3] (0.00s, err=3.31e-03)
    [8/10] DFS-100-min2       ... [0, 0, 0, 0] (0.00s, err=1.62e+00)
    [9/10] DFS-150            ... [0, 0, 0, 2207] (0.00s, err=2.08e-08)
    [10/10] DFS-200            ... [0, 0, 0, 2207] (0.00s, err=2.08e-08)
    → Best by accuracy: [0, 0, 0, 2207]
       D=7.7 digits, L=11.1 bits, E=0.692

  Depth 5:
    [1/10] DFS-60             ... [0, 0, 14, 1047, 1648] (0.00s, err=3.10e-10)
    [2/10] DFS-60-min1        ... [1, 1, 1, 1, 3] (0.00s, err=1.02e-03)
    [3/10] DFS-80             ... [0, 0, 14, 1047, 1648] (0.00s, err=3.10e-10)
    [4/10] DFS-80-min1        ... [1, 1, 1, 1, 3] (0.00s, err=1.02e-03)
    [5/10] DFS-80-min2        ... [0, 0, 0, 0, 0] (0.00s, err=1.62e+00)
    [6/10] DFS-100            ... [0, 1, 12, 414, 6720] (0.00s, err=2.28e-10)
    [7/10] DFS-100-min1       ... [1, 1, 1, 1, 3] (0.00s, err=1.02e-03)
    [8/10] DFS-100-min2       ... [0, 0, 0, 0, 0] (0.00s, err=1.62e+00)
    [9/10] DFS-150            ... [0, 1, 12, 373, 15123] (0.00s, err=9.13e-11)
    [10/10] DFS-200            ... [0, 1, 12, 332, 26888] (0.00s, err=2.28e-11)
    → Best by accuracy: [0, 1, 12, 332, 26888]
       D=10.6 digits, L=27.8 bits, E=0.383
    → Best by efficiency: [1, 1, 1, 1, 3]
       E=0.498 digits/bit, D=3.0, L=6.0

  Depth 6:
    [1/10] DFS-60             ... [0, 1, 8, 642, 2259, 3414] (0.02s, err=3.44e-14)
    [2/10] DFS-60-min1        ... [1, 1, 1, 1, 1, 3] (0.00s, err=3.16e-04)
    [3/10] DFS-80             ... [0, 1, 8, 642, 2259, 3414] (0.03s, err=3.44e-14)
    [4/10] DFS-80-min1        ... [1, 1, 1, 1, 1, 3] (0.00s, err=3.16e-04)
    [5/10] DFS-80-min2        ... [0, 0, 0, 0, 0, 0] (0.00s, err=1.62e+00)
    [6/10] DFS-100            ... [0, 0, 4, 1810, 1295, 7499] (0.04s, err=1.80e-14)
    [7/10] DFS-100-min1       ... [1, 1, 1, 1, 1, 3] (0.00s, err=3.16e-04)
    [8/10] DFS-100-min2       ... [0, 0, 0, 0, 0, 0] (0.00s, err=1.62e+00)
    [9/10] DFS-150            ... [0, 0, 9, 1309, 17665, 15862] (0.08s, err=5.25e-16)
    [10/10] DFS-200            ... [0, 0, 9, 1309, 17665, 15862] (0.13s, err=5.25e-16)
    → Best by accuracy: [0, 0, 9, 1309, 17665, 15862]
       D=15.3 digits, L=41.7 bits, E=0.366
    → Best by efficiency: [1, 1, 1, 1, 1, 3]
       E=0.500 digits/bit, D=3.5, L=7.0

================================================================================
SUMMARY (Best by Accuracy) - Total runtime: 254.2s
================================================================================

π:
  Depth 3: [1, 44, 1202]
           Accuracy: 7.0 digits
           Complexity: 16.7 bits
           Efficiency: 0.420 digits/bit
  Depth 4: [0, 52, 1889, 29924]
           Accuracy: 12.4 digits
           Complexity: 31.5 bits
           Efficiency: 0.392 digits/bit
  Depth 5: [0, 49, 2276, 4500, 2320]
           Accuracy: 15.6 digits
           Complexity: 40.1 bits
           Efficiency: 0.388 digits/bit
  Depth 6: [1, 1, 5945, 7635, 1554, 9186]
           Accuracy: 16.6 digits
           Complexity: 51.2 bits
           Efficiency: 0.325 digits/bit

e:
  Depth 3: [0, 10, 1989]
           Accuracy: 6.2 digits
           Complexity: 14.4 bits
           Efficiency: 0.427 digits/bit
  Depth 4: [0, 8, 2028, 20560]
           Accuracy: 10.8 digits
           Complexity: 28.5 bits
           Efficiency: 0.379 digits/bit
  Depth 5: [1, 30, 36, 6389, 33807]
           Accuracy: 15.0 digits
           Complexity: 38.9 bits
           Efficiency: 0.387 digits/bit
  Depth 6: [0, 0, 2780, 40193, 36413, 12323]
           Accuracy: 17.2 digits
           Complexity: 55.5 bits
           Efficiency: 0.310 digits/bit

φ:
  Depth 3: [0, 0, 47]
           Accuracy: 4.0 digits
           Complexity: 5.6 bits
           Efficiency: 0.723 digits/bit
  Depth 4: [0, 0, 0, 2207]
           Accuracy: 7.7 digits
           Complexity: 11.1 bits
           Efficiency: 0.692 digits/bit
  Depth 5: [0, 1, 12, 332, 26888]
           Accuracy: 10.6 digits
           Complexity: 27.8 bits
           Efficiency: 0.383 digits/bit
  Depth 6: [0, 0, 9, 1309, 17665, 15862]
           Accuracy: 15.3 digits
           Complexity: 41.7 bits
           Efficiency: 0.366 digits/bit

================================================================================
STAR PERFORMERS BY ACCURACY (≥10 correct digits)
================================================================================

Rank  Target Depth  Digits   Complexity   Efficiency   Coefficients
----------------------------------------------------------------------------------------------------
1     e      6        17.2         55.5        0.310   [0, 0, 2780, 40193, 36413, 12323]
2     π      6        16.6         51.2        0.325   [1, 1, 5945, 7635, 1554, 9186]
3     π      5        15.6         40.1        0.388   [0, 49, 2276, 4500, 2320]
4     φ      6        15.3         41.7        0.366   [0, 0, 9, 1309, 17665, 15862]
5     e      5        15.0         38.9        0.387   [1, 30, 36, 6389, 33807]
6     π      4        12.4         31.5        0.392   [0, 52, 1889, 29924]
7     e      4        10.8         28.5        0.379   [0, 8, 2028, 20560]
8     φ      5        10.6         27.8        0.383   [0, 1, 12, 332, 26888]

================================================================================
BEST BY EFFICIENCY (most digits per bit of complexity)
================================================================================

Rank  Target Depth  Efficiency   Digits   Complexity   Coefficients
----------------------------------------------------------------------------------------------------
1     φ      3           0.723      4.0          5.6   [0, 0, 47]
2     φ      4           0.692      7.7         11.1   [0, 0, 0, 2207]
3     φ      6           0.500      3.5          7.0   [1, 1, 1, 1, 1, 3]
4     e      3           0.461      6.1         13.1   [1, 2, 1507]
5     e      3           0.427      6.2         14.4   [0, 10, 1989]
6     π      3           0.420      7.0         16.7   [1, 44, 1202]
7     e      4           0.410     10.4         25.4   [0, 33, 410, 3190]
8     e      4           0.407      8.8         21.7   [2, 1, 759, 748]
9     e      3           0.397      5.3         13.3   [2, 5, 578]
10    π      4           0.392     12.4         31.5   [0, 52, 1889, 29924]
11    π      5           0.388     15.6         40.1   [0, 49, 2276, 4500, 2320]
12    e      5           0.387     15.0         38.9   [1, 30, 36, 6389, 33807]
13    φ      5           0.386      9.5         24.6   [0, 0, 14, 1047, 1648]
14    π      4           0.385     10.6         27.5   [3, 7, 1553, 3888]
15    φ      5           0.383     10.6         27.8   [0, 1, 12, 332, 26888]

================================================================================
COMPARISON: Your Original Star vs New Best
================================================================================

Description          Coefficients                        Digits   D/L        Efficiency
------------------------------------------------------------------------------------------
π d5 (original)      [2, 6, 3081, 2193, 1493]              13.7       37.6    0.365
π d5 (new best)      [0, 49, 2276, 4500, 2320]             15.6       40.1    0.388

→ New result has 1.8 more digits!
→ AND it's more efficient: 0.388 vs 0.365 digits/bit

================================================================================
LATEX TABLE ENTRIES (Best by accuracy per depth)
================================================================================

% π
3 & Add & $\sqrt{1 + \sqrt{44 + \sqrt{1202}}}$ & $9.50e-08$ & 7.0 & 16.7 \\
4 & Add & $\sqrt{0 + \sqrt{52 + \sqrt{1889 + \sqrt{29924}}}}$ & $4.41e-13$ & 12.4 & 31.5 \\
5 & Add & $\sqrt{0 + \sqrt{49 + \sqrt{2276 + \sqrt{4500 + \sqrt{2320}}}}}$ & $2.79e-16$ & 15.6 & 40.1 \\
6 & Add & $\sqrt{1 + \sqrt{1 + \sqrt{5945 + \sqrt{7635 + \sqrt{1554 + \sqrt{9186}}}}}}$ & $2.34e-17$ & 16.6 & 51.2 \\

% e
3 & Add & $\sqrt{0 + \sqrt{10 + \sqrt{1989}}}$ & $7.00e-07$ & 6.2 & 14.4 \\
4 & Add & $\sqrt{0 + \sqrt{8 + \sqrt{2028 + \sqrt{20560}}}}$ & $1.60e-11$ & 10.8 & 28.5 \\
5 & Add & $\sqrt{1 + \sqrt{30 + \sqrt{36 + \sqrt{6389 + \sqrt{33807}}}}}$ & $9.50e-16$ & 15.0 & 38.9 \\
6 & Add & $\sqrt{0 + \sqrt{0 + \sqrt{2780 + \sqrt{40193 + \sqrt{36413 + \sqrt{12323}}}}}}$ & $6.60e-18$ & 17.2 & 55.5 \\

% φ
3 & Add & $\sqrt{0 + \sqrt{0 + \sqrt{47}}}$ & $9.16e-05$ & 4.0 & 5.6 \\
4 & Add & $\sqrt{0 + \sqrt{0 + \sqrt{0 + \sqrt{2207}}}}$ & $2.08e-08$ & 7.7 & 11.1 \\
5 & Add & $\sqrt{0 + \sqrt{1 + \sqrt{12 + \sqrt{332 + \sqrt{26888}}}}}$ & $2.28e-11$ & 10.6 & 27.8 \\
6 & Add & $\sqrt{0 + \sqrt{0 + \sqrt{9 + \sqrt{1309 + \sqrt{17665 + \sqrt{15862}}}}}}$ & $5.25e-16$ & 15.3 & 41.7 \\

================================================================================
Search complete with numba acceleration and high-precision verification
================================================================================


~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

*********************************************************************************

OUTPUT FOR 02_analysis_and_tablegen.py

====================================================================================================
ANALYSIS OF NESTED RADICAL APPROXIMATIONS
Using results from nested_radical_search_FINAL.py
====================================================================================================
====================================================================================================
COMPREHENSIVE ANALYSIS: Nested Radicals vs. Zero-Tail Baselines
Grouped by Target and Depth for Easy Comparison
====================================================================================================


====================================================================================================
TARGET: π
====================================================================================================
Depth   Type         D        L          E          Error        Winner    
----------------------------------------------------------------------------------------------------
k=3     Zero-Tail       4.7       13.2      0.357     1.94e-05             

k=4     Nested         12.4       31.5      0.392     4.41e-13   Nested +9.6%
        Zero-Tail       9.5       26.4      0.358     3.43e-10             

k=5     Nested         15.6       40.1      0.388     2.79e-16   Nested +17.9%
        Zero-Tail      17.4       52.8      0.329     4.20e-18             

k=6     Nested         16.6       51.2      0.325     2.34e-17   ZT +0.9%  
        Zero-Tail      34.6      105.7      0.328     2.30e-35             

====================================================================================================
TARGET: e
====================================================================================================
Depth   Type         D        L          E          Error        Winner    
----------------------------------------------------------------------------------------------------
k=3     Nested          6.2       14.4      0.427     7.00e-07   ZT +8.0%  
        Zero-Tail       5.3       11.5      0.461     4.79e-06             

k=4     Nested         10.8       28.5      0.379     1.60e-11   Nested +8.8%
        Zero-Tail       8.0       23.1      0.348     9.17e-09             

k=5     Nested         15.0       38.9      0.387     9.50e-16   Nested +15.3%
        Zero-Tail      15.5       46.2      0.335     3.28e-16             

k=6     Nested         17.2       55.5      0.310     6.60e-18   ZT +6.0%  
        Zero-Tail      30.3       92.3      0.328     4.87e-31             

====================================================================================================
TARGET: φ
====================================================================================================
Depth   Type         D        L          E          Error        Winner    
----------------------------------------------------------------------------------------------------
k=3     Nested          4.0        5.6      0.723     9.16e-05             
        Zero-Tail       4.0        5.6      0.723     9.16e-05             

k=4     Nested          7.7       11.1      0.692     2.08e-08             
        Zero-Tail       7.7       11.1      0.692     2.08e-08             

k=5     Nested         10.6       27.8      0.383     2.28e-11   ZT +72.5% 
        Zero-Tail      14.7       22.2      0.660     2.13e-15             

k=6     Nested         15.3       41.7      0.366     5.25e-16   ZT +74.3% 
        Zero-Tail      28.3       44.4      0.638     4.49e-29             

====================================================================================================
DEPTH-MATCHED COMPARISON: Nested Radicals vs. Zero-Tail (Same k)
====================================================================================================

π depth-4:
  Nested:    [0, 52, 1889, 29924]
             D=12.4, L=31.5, E=0.392
  Zero-Tail: [0×3, 90032221]
             D=9.5, L=26.4, E=0.358
  → Nested is 9.6% more efficient

π depth-5:
  Nested:    [0, 49, 2276, 4500, 2320]
             D=15.6, L=40.1, E=0.388
  Zero-Tail: [0×4, 8105800789910710]
             D=17.4, L=52.8, E=0.329
  → Nested is 17.9% more efficient

e depth-4:
  Nested:    [0, 8, 2028, 20560]
             D=10.8, L=28.5, E=0.379
  Zero-Tail: [0×3, 8886111]
             D=8.0, L=23.1, E=0.348
  → Nested is 8.8% more efficient

e depth-5:
  Nested:    [1, 30, 36, 6389, 33807]
             D=15.0, L=38.9, E=0.387
  Zero-Tail: [0×4, 78962960182681]
             D=15.5, L=46.2, E=0.335
  → Nested is 15.3% more efficient

φ depth-5:
  Nested:    [0, 1, 12, 332, 26888]
             D=10.6, L=27.8, E=0.383
  Zero-Tail: [0×4, 4870847]
             D=14.7, L=22.2, E=0.660
  → Zero-tail is 72.5% more efficient

φ depth-6:
  Nested:    [0, 0, 9, 1309, 17665, 15862]
             D=15.3, L=41.7, E=0.366
  Zero-Tail: [0×5, 23725150497407]
             D=28.3, L=44.4, E=0.638
  → Zero-tail is 74.3% more efficient

====================================================================================================
EFFICIENCY FRONTIER: Best D/L at Each Complexity Level
====================================================================================================

Rank   Target   Type     E        D        L          Coeffs
----------------------------------------------------------------------------------------------------
1      φ        Nested    0.723      4.0        5.6   [0, 0, 47]
2      φ        Nested    0.692      7.7       11.1   [0, 0, 0, 2207]
3      π        CF        0.429      6.6       15.3   [355, 113]
4      e        Nested    0.427      6.2       14.4   [0, 10, 1989]
5      π        Nested    0.392     12.4       31.5   [0, 52, 1889, 29924]
6      π        Nested    0.388     15.6       40.1   [0, 49, 2276, 4500, 2320]
7      e        Nested    0.387     15.0       38.9   [1, 30, 36, 6389, 33807]
8      φ        Nested    0.383     10.6       27.8   [0, 1, 12, 332, 26888]
9      e        Nested    0.379     10.8       28.5   [0, 8, 2028, 20560]
10     φ        Nested    0.366     15.3       41.7   [0, 0, 9, 1309, 17665, 15862]
11     π        Nested    0.325     16.6       51.2   [1, 1, 5945, 7635, 1554, 9186]
12     e        Nested    0.310     17.2       55.5   [0, 0, 2780, 40193, 36413, 12323]

====================================================================================================
Analysis complete!
====================================================================================================
